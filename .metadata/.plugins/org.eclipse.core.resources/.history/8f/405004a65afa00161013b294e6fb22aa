import pygame

def deadband(value):
    if value > -0.1 and value < 0.1:
        return 0.0
    else:
        return value
    

class JoystickReader:
    
    def __init__(self, joystick):
        self.joystick = joystick
        self.axis_x1 = 0.0
        self.axis_y1 = 0.0
        self.axis_x2 = 0.0
        self.axis_y2 = 0.0
        self.axis_lt = 0.0
        self.axis_rt = 0.0
        
        self.btn_a = False
        self.btn_b = False
        self.btn_x = False
        self.btn_y = False
        
    
    def updateValues(self):
        self.axis_x1 = deadband(self.joystick.get_axis(0))
        self.axis_y1 = deadband(self.joystick.get_axis(1))
        self.axis_x2 = deadband(self.joystick.get_axis(4))
        self.axis_y2 = deadband(self.joystick.get_axis(3))
        trigger_axis = deadband(self.joystick.get_axis(2))
        if(trigger_axis >= 0):
            self.axis_lt = trigger_axis
            self.axis_rt = 0
        else:
            self.axis_lt = 0
            self.axis_rt = -trigger_axis
        
        self.btn_a = self.joystick.get_button(0)
        self.btn_b = self.joystick.get_button(1)
        self.btn_x = self.joystick.get_button(2)
        self.btn_y = self.joystick.get_button(3)
            
        
    def printAxes(self):
        print self.axis_x1, self.axis_y1, self.axis_x2, self.axis_y2, self.axis_lt, self.axis_rt
        
    def printButtons(self):
        print self.btn_a, self.btn_b, self.btn_x, self.btn_y

if __name__ == "__main__":
    pygame.init()
    pygame.joystick.init()
    joystick1 = pygame.joystick.Joystick(0)
    joystick1.init()
    jReader = JoystickReader(joystick1)
    while True:
        pygame.event.get()
        jReader.updateValues()
        jReader.printAxes()
    